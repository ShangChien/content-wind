{"generatedAt":1723690979078,"generateTime":286,"contents":[{"_path":"/","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Hello！","description":"","navigation":{"title":"Home"},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"hello"},"children":[{"type":"text","value":"Hello！"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"SadaHaru","src":"/SadaHaru.jpg"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"👏欢迎来到个人博客"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一个从计算化学转码做应用的soul"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:1.index.md","_source":"content","_file":"1.index.md","_stem":"1.index","_extension":"md"},{"_path":"/about","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"About","description":"✨about me","navigation":{"title":"About"},"head":{"description":"This is a about page."},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"about"},"children":[{"type":"text","value":"About"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"✨about me"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"just fun","src":"/cover.jpg"},"children":[]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:2.about.md","_source":"content","_file":"2.about.md","_stem":"2.about","_extension":"md"},{"_path":"/python-typing","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Python笔记  Typing","description":"","navigation":{"title":"python typing 笔记"},"head":{"description":"This is a notebook page."},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"just fun","src":"/cover.jpg"},"children":[]}]},{"type":"element","tag":"h1","props":{"id":"python-typing-笔记"},"children":[{"type":"text","value":"python typing 笔记"}]},{"type":"element","tag":"pre","props":{"className":"language-py shiki shiki-themes github-dark github-light","code":"from dataclasses import dataclass\nfrom typing import List\n\n@dataclass\nclass Player:\n    name: str\n    number: int\n    position: str\n    age: int\n\n    @dataclass\n    class Team:\n        name: str\n        players: List['Player']  # 使用字符串注解以避免循环引用\n\n# 创建球员实例\njames = Player(name='Lebron James', number=23, position='SF', age=25)\ndavis = Player(name='Anthony Davis', number=3, position='PF', age=21)\n\n# 创建球队实例\nlal = Player.Team(name='Los Angeles Lakers', players=[james, davis])\n\nprint(lal)\n","language":"py","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"from dataclasses import dataclass\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"from typing import List\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"@dataclass\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class Player:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    name: str\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    number: int\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    position: str\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    age: int\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    @dataclass\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    class Team:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        name: str\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        players: List['Player']  # 使用字符串注解以避免循环引用\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# 创建球员实例\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"james = Player(name='Lebron James', number=23, position='SF', age=25)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":18},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"davis = Player(name='Anthony Davis', number=3, position='PF', age=21)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":19},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":20},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# 创建球队实例\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":21},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"lal = Player.Team(name='Los Angeles Lakers', players=[james, davis])\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":22},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":23},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"print(lal)\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"解释"},"children":[{"type":"text","value":"解释："}]},{"type":"element","tag":"h4","props":{"id":"在嵌套的-dataclass-中使用字符串注解-player-是为了避免循环引用的问题当你在-team-类中定义-players-字段时它引用了外部的-player-类但此时-player-类还没有完全定义所以直接使用-player-会导致循环引用错误为了解决这个问题可以使用字符串-player-作为类型注解而不是直接使用-player这样做的原因是python-的类型注解系统允许使用字符串来引用尚未定义的类当-python-解释器执行到-player-类的定义时它会将字符串-player-替换为实际的-player-类对象这样就可以顺利地定义嵌套的-dataclass并在运行时正确引用外部的-player-类使用字符串注解是一种常见的技巧可以解决在定义类时引用尚未定义的类的问题这在处理相互引用的类或者循环引用的情况下非常有用"},"children":[{"type":"text","value":"在嵌套的 dataclass 中使用字符串注解 'Player' 是为了避免循环引用的问题。当你在 Team 类中定义 players 字段时，它引用了外部的 Player 类。但此时 Player 类还没有完全定义，所以直接使用 Player 会导致循环引用错误。为了解决这个问题，可以使用字符串 'Player' 作为类型注解，而不是直接使用 Player。这样做的原因是，Python 的类型注解系统允许使用字符串来引用尚未定义的类。当 Python 解释器执行到 Player 类的定义时，它会将字符串 'Player' 替换为实际的 Player 类对象。这样就可以顺利地定义嵌套的 dataclass，并在运行时正确引用外部的 Player 类。使用字符串注解是一种常见的技巧，可以解决在定义类时引用尚未定义的类的问题。这在处理相互引用的类或者循环引用的情况下非常有用。"}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"解释","depth":2,"text":"解释："}]}},"_type":"markdown","_id":"content:python笔记--typing.md","_source":"content","_file":"python笔记--typing.md","_stem":"python笔记--typing","_extension":"md"}],"navigation":[{"title":"Home","_path":"/"},{"title":"About","_path":"/about"},{"title":"python typing 笔记","_path":"/python-typing"}]}